---
- fail:
    msg: Please specify password for rabbitmq user
  when: rabbitmq_user_password == "" or celery_user_password == ""

- name: Import RabbitMQ signing key
  rpm_key:
    state: present
    key: "{{ item }}"
  loop:
    - "https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc"
    - "https://packagecloud.io/rabbitmq/erlang/gpgkey"
    - "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey"

- name: Add Erlang repository
  yum_repository:
    name: rabbitmq_erlang
    description: Erlang (CentOS 7)
    baseurl: https://packagecloud.io/rabbitmq/erlang/el/7/$basearch
    repo_gpgcheck: yes
    gpgcheck: yes
    enabled: yes
    gpgkey:
      - https://packagecloud.io/rabbitmq/erlang/gpgkey
      - https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
    sslverify: yes
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
    metadata_expire: 300

- name: Add Rabbitmq server repository
  yum_repository:
    name: rabbitmq_server
    description: Rabbitmq Server (CentOS 7)
    baseurl: https://packagecloud.io/rabbitmq/rabbitmq-server/el/7/$basearch
    repo_gpgcheck: yes
    gpgcheck: yes
    enabled: yes
    gpgkey: https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey
    sslverify: yes
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
    metadata_expire: 300

- name: Install necessary packages
  yum:
    state: latest
    name:
      - socat
      - logrotate

- name: Install Erlang
  yum:
    name: https://bintray.com/rabbitmq-erlang/rpm/download_file?file_path=erlang%2F22%2Fel%2F7%2Fx86_64%2Ferlang-22.3.4.2-1.el7.x86_64.rpm
    state: present

- name: Install RabbitMQ Server
  yum:
    name: rabbitmq-server
    state: present

- name: Start and enable RabbitMQ Server
  service:
    name: rabbitmq-server
    state: started
    enabled: yes

- name: Add RabbitMQ user
  rabbitmq_user:
    user: "{{ rabbitmq_user }}"
    password: "{{ rabbitmq_user_password }}"
    vhost: /
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present

# the user_reg feature makes use of celery for task managment in flask
# this requires a communication channel dedicated to celery in RabbitMQ
- name: Add Vhost in celery
  rabbitmq_vhost:
    name: "{{ celery_vhost }}"
    state: present

- name: Add User in celery
  rabbitmq_user:
    user: "{{ celery_user }}"
    password: "{{ celery_user_password }}"
    vhost: "{{ celery_vhost }}"
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present

# jpr: this may be redundant for ohpc
# also, we should know what ports to open. ;)
- name: Turn off firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no
