---
- name: Get package facts
  ansible.builtin.package_facts:
    manager: "auto"

- name: Tasks only needed in cm version
  block:
    - name: Make sure lmod config is installed with cm 8 version
      ansible.builtin.yum:
        name: cm-modules-init-client
        state: present
      when: cmsh_version is version('9.0', '<')

    - name: Make sure lmod config is installed with cm 9 version
      ansible.builtin.yum:
        name: cm-modules-init
        state: present
      when: cmsh_version is version('9.0', '>=')

    - name: Enable Lmod
      replace:
        path: "{{ enable_lmod_prefix }}/etc/sysconfig/modules/lmod/{{ item.path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { path: 'cm-lmod-init.sh', regexp: 'LMOD=.*$', replace: 'LMOD=1'}
        - { path: 'cm-lmod-init.csh', regexp: 'LMOD.*$', replace: 'LMOD "1"'}

    - name: Update Lmod Spider Cache setting
      ansible.builtin.replace:
        path: "{{ enable_lmod_prefix }}{{ lmod_loc }}/init/lmodrc.lua"
        regexp: '(\["{{ item.key }}"\] = ).*$'
        replace: \1 "{{ item.value }}",
      loop:
        - {"key": "dir", "value": "{{ lmod_cache_loc }}/sysCacheDir"}
        - {"key": "timestamp", "value": "{{ lmod_cache_loc }}/sysCacheTS.txt"}
  when: '"cm" in ansible_facts.packages.Lmod[0].release'

- name: Tasks only needed in non-cm version
  block:
    - name: Add Lmod Spider Cache setting
      ansible.builtin.blockinfile:
        marker: "-- {mark} ANSIBLE MANAGED BLOCK"
        path: "{{ enable_lmod_prefix }}{{ lmod_loc }}/init/lmodrc.lua"
        block: |
          scDescriptT = {
            {
              ["dir"] = "{{ lmod_cache_loc }}/sysCacheDir",
              ["timestamp"] = "{{ lmod_cache_loc }}/sysCacheTS.txt",
            },
          }

    - name: Add shared module
      ansible.builtin.copy:
        src: shared
        dest: "{{ enable_lmod_prefix }}{{ lmod_default_modulepath }}/shared"

    - name: Setup default modules
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/etc/profile.d/z01-{{ item }}"
      loop:
        - default_module.sh
        - default_module.csh

  when: '"cm" not in ansible_facts.packages.Lmod[0].release'

- name: Put DefaultModules in place
  template:
    src: DefaultModules.lua.j2
    dest: "{{ enable_lmod_prefix }}{{ lmod_default_modulepath }}/DefaultModules.lua"
